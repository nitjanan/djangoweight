# Generated by Django 4.1.4 on 2024-02-22 02:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseCarRegistration',
            fields=[
                ('car_registration_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสทะเบียนรถ')),
                ('car_registration_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อทะเบียนรถ')),
                ('car_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='ประเภทรถ')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ทะเบียนรถ',
                'verbose_name_plural': 'ข้อมูลทะเบียนรถ',
                'db_table': 'base_car_registration',
            },
        ),
        migrations.CreateModel(
            name='BaseCarryType',
            fields=[
                ('base_carry_type_id', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('base_carry_type_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'base_carry_type',
            },
        ),
        migrations.CreateModel(
            name='BaseCarTeam',
            fields=[
                ('car_team_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสทีม')),
                ('car_team_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อทีม')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ทีม',
                'verbose_name_plural': 'ข้อมูลทีม',
                'db_table': 'base_car_team',
            },
        ),
        migrations.CreateModel(
            name='BaseCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='ชื่อบริษัท')),
                ('code', models.CharField(blank=True, max_length=120, null=True, verbose_name='โค้ดบริษัท')),
            ],
            options={
                'verbose_name': 'บริษัท',
                'verbose_name_plural': 'ข้อมูลบริษัท',
                'db_table': 'base_comp',
            },
        ),
        migrations.CreateModel(
            name='BaseCustomer',
            fields=[
                ('customer_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสลูกค้า')),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อลูกค้า')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='ที่อยู่')),
                ('send_to', models.CharField(blank=True, max_length=255, null=True, verbose_name='ส่งที่')),
                ('customer_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='ประเภทลูกค้า')),
                ('is_stone_estimate', models.BooleanField(default=False, verbose_name='ใช้ในการประมาณการณ์หิน')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('is_disable', models.BooleanField(default=False, verbose_name='ปิดการใช้งาน')),
            ],
            options={
                'verbose_name': 'ลูกค้า',
                'verbose_name_plural': 'ข้อมูลลูกค้า',
                'db_table': 'base_customer',
            },
        ),
        migrations.CreateModel(
            name='BaseDriver',
            fields=[
                ('driver_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสผู้ขับ')),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อผู้ขับ')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท')),
            ],
            options={
                'verbose_name': 'ผู้ขับ',
                'verbose_name_plural': 'ข้อมูลผู้ขับ',
                'db_table': 'base_driver',
            },
        ),
        migrations.CreateModel(
            name='BaseFertilizer',
            fields=[
                ('fertilizer_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสปุ๋ย')),
                ('fertilizer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อปุ๋ย')),
            ],
            options={
                'verbose_name': 'ปุ๋ย',
                'verbose_name_plural': 'ข้อมูลปุ๋ย',
                'db_table': 'base_fertilizer',
            },
        ),
        migrations.CreateModel(
            name='BaseJobType',
            fields=[
                ('base_job_type_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสประเภทงานของลูกค้า')),
                ('base_job_type_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อประเภทงานของลูกค้า')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ประเภทงานของลูกค้า',
                'verbose_name_plural': 'ข้อมูลประเภทงานของลูกค้า',
                'db_table': 'base_job_type',
            },
        ),
        migrations.CreateModel(
            name='BaseLineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'base_line_type',
            },
        ),
        migrations.CreateModel(
            name='BaseLossType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'base_loss_type',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BaseMachineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'base_machine_type',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BaseMill',
            fields=[
                ('mill_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสต้นทาง')),
                ('mill_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อต้นทาง')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('step', models.IntegerField(blank=True, null=True, verbose_name='ลำดับโรงโม่ของบริษัท (ต้นทาง)')),
                ('m_comp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='โรงโม่ของบริษัท (ต้นทาง)')),
            ],
            options={
                'verbose_name': 'ต้นทาง',
                'verbose_name_plural': 'ข้อมูลต้นทาง',
                'db_table': 'base_mill',
            },
        ),
        migrations.CreateModel(
            name='BaseScoop',
            fields=[
                ('scoop_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสผู้ตัก')),
                ('scoop_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อผู้ตัก')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท')),
            ],
            options={
                'verbose_name': 'ผู้ตัก',
                'verbose_name_plural': 'ข้อมูลผู้ตัก',
                'db_table': 'base_scoop',
            },
        ),
        migrations.CreateModel(
            name='BaseSite',
            fields=[
                ('base_site_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสปลายทาง')),
                ('base_site_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อปลายทาง')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('step', models.IntegerField(blank=True, null=True, verbose_name='ลำดับโรงโม่ของบริษัท (ปลายทาง)')),
                ('target', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='กำลังการผลิต (Target)')),
                ('s_comp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='โรงโม่ของบริษัท (ปลายทาง)')),
            ],
            options={
                'verbose_name': 'ปลายทาง',
                'verbose_name_plural': 'ข้อมูลปลายทาง',
                'db_table': 'base_site',
            },
        ),
        migrations.CreateModel(
            name='BaseStoneColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'base_stone_color',
            },
        ),
        migrations.CreateModel(
            name='BaseStoneType',
            fields=[
                ('base_stone_type_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสหิน')),
                ('base_stone_type_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อหิน')),
                ('type', models.CharField(blank=True, max_length=255, null=True, verbose_name='ประเภทหิน')),
                ('cal_q', models.CharField(blank=True, max_length=120, null=True, verbose_name='ค่าคำนวณคิว')),
                ('is_stone_estimate', models.BooleanField(default=False, verbose_name='ใช้ในการประมาณการณ์หิน')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ชนิดหิน',
                'verbose_name_plural': 'ข้อมูลชนิดหิน',
                'db_table': 'base_stone_type',
            },
        ),
        migrations.CreateModel(
            name='BaseVatType',
            fields=[
                ('base_vat_type_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสชนิดvat')),
                ('base_vat_type_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อชนิดvat')),
                ('base_vat_type_des', models.CharField(blank=True, max_length=255, null=True, verbose_name='คำอธิบาย')),
            ],
            options={
                'verbose_name': 'ชนิดvat',
                'verbose_name_plural': 'ข้อมูลชนิดvat',
                'db_table': 'base_vat_type',
            },
        ),
        migrations.CreateModel(
            name='BaseVisible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อแท็บการใช้งาน')),
            ],
            options={
                'verbose_name': 'แท็บการใช้งาน',
                'verbose_name_plural': 'ข้อมูลแท็บการใช้งาน',
                'db_table': 'base_visible',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseWeightStation',
            fields=[
                ('id', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('des', models.CharField(blank=True, max_length=120, null=True)),
                ('weight_id_min', models.IntegerField(blank=True, null=True, verbose_name='id น้อยสุดของตาชั่งนี้')),
                ('weight_id_max', models.IntegerField(blank=True, null=True, verbose_name='id มากสุดของตาชั่งนี้')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany')),
                ('vat_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basevattype')),
            ],
            options={
                'db_table': 'base_weight_station',
            },
        ),
        migrations.CreateModel(
            name='BaseWeightType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'base_weight_type',
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(default=django.utils.timezone.now, verbose_name='วันที่ผลิต')),
                ('update', models.DateField(auto_now=True, verbose_name='วันที่อัพเดท')),
                ('goal', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accumulated_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('plan_start_time', models.DurationField(blank=True, null=True)),
                ('plan_end_time', models.DurationField(blank=True, null=True)),
                ('plan_time', models.DurationField(blank=True, null=True)),
                ('run_start_time', models.DurationField(blank=True, null=True)),
                ('run_end_time', models.DurationField(blank=True, null=True)),
                ('mile_run_start_time', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('mile_run_end_time', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('run_time', models.DurationField(blank=True, null=True)),
                ('actual_start_time', models.DurationField(blank=True, null=True)),
                ('actual_end_time', models.DurationField(blank=True, null=True)),
                ('actual_time', models.DurationField(blank=True, null=True)),
                ('total_loss_time', models.DurationField(blank=True, null=True)),
                ('actual_working_time', models.DurationField(blank=True, null=True)),
                ('production_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accumulated_production_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('capacity_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท')),
                ('line_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baselinetype')),
            ],
            options={
                'db_table': 'production',
            },
        ),
        migrations.CreateModel(
            name='StoneEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(default=django.utils.timezone.now, verbose_name='วันที่สร้าง')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basesite')),
            ],
            options={
                'db_table': 'stone_estimate',
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('weight_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('ref_id', models.CharField(blank=True, max_length=255, null=True)),
                ('doc_id', models.CharField(blank=True, max_length=255, null=True)),
                ('car_registration_name', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('site_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mill_name', models.CharField(blank=True, max_length=255, null=True)),
                ('stone_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pay', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_name', models.CharField(blank=True, max_length=255, null=True)),
                ('scoop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('approve_id', models.CharField(blank=True, max_length=255, null=True)),
                ('approve_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_type', models.CharField(blank=True, max_length=255, null=True)),
                ('stone_color', models.CharField(blank=True, max_length=255, null=True)),
                ('car_team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('clean_type', models.CharField(blank=True, max_length=255, null=True)),
                ('transport', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('ship_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('carry_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('line_type', models.CharField(blank=True, max_length=255, null=True)),
                ('bag_type', models.CharField(blank=True, max_length=255, null=True)),
                ('fertilizer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pack_weight', models.CharField(blank=True, max_length=255, null=True)),
                ('price_per_ton', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('q', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('amount_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('weight_in', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_out', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_total', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('oil_content', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('origin_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('origin_q', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ton', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sack', models.IntegerField(blank=True, null=True)),
                ('price_up', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_down', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_up_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_down_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight_cost_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('base_weight_station_name', models.CharField(blank=True, max_length=255, null=True)),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('is_s', models.BooleanField(default=False, verbose_name='สถานะ non vat')),
                ('exp_bill', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_change', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_remission', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_note', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_cancel', models.BooleanField(default=False, verbose_name='สถานะยกเลิก')),
                ('bws', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweightstation')),
                ('car_registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_car_registration', to='weightapp.basecarregistration')),
                ('car_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_car_team', to='weightapp.basecarteam')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_customer', to='weightapp.basecustomer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_driver', to='weightapp.basedriver')),
                ('mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_mill', to='weightapp.basemill')),
                ('scoop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_scoop', to='weightapp.basescoop')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_site', to='weightapp.basesite')),
                ('stone_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_stone_type', to='weightapp.basestonetype')),
            ],
            options={
                'db_table': 'weight',
                'ordering': ['weight_id'],
            },
        ),
        migrations.CreateModel(
            name='WeightHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('ref_id', models.CharField(blank=True, max_length=255, null=True)),
                ('doc_id', models.CharField(blank=True, max_length=255, null=True)),
                ('car_registration_name', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('site_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mill_name', models.CharField(blank=True, max_length=255, null=True)),
                ('stone_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pay', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_name', models.CharField(blank=True, max_length=255, null=True)),
                ('scoop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('approve_id', models.CharField(blank=True, max_length=255, null=True)),
                ('approve_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_type', models.CharField(blank=True, max_length=255, null=True)),
                ('stone_color', models.CharField(blank=True, max_length=255, null=True)),
                ('car_team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('clean_type', models.CharField(blank=True, max_length=255, null=True)),
                ('transport', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('ship_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('carry_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('line_type', models.CharField(blank=True, max_length=255, null=True)),
                ('bag_type', models.CharField(blank=True, max_length=255, null=True)),
                ('fertilizer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pack_weight', models.CharField(blank=True, max_length=255, null=True)),
                ('price_per_ton', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('q', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('amount_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('weight_in', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_out', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_total', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('oil_content', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('origin_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('origin_q', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ton', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sack', models.IntegerField(blank=True, null=True)),
                ('price_up', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_down', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_up_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_down_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight_cost_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('update', models.DateTimeField(default=django.utils.timezone.now)),
                ('weight_id', models.IntegerField(blank=True, null=True)),
                ('base_weight_station_name', models.CharField(blank=True, max_length=255, null=True)),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('is_s', models.BooleanField(default=False, verbose_name='สถานะ non vat')),
                ('exp_bill', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_change', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_remission', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_note', models.CharField(blank=True, max_length=255, null=True)),
                ('exp_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_cancel', models.BooleanField(default=False, verbose_name='สถานะยกเลิก')),
                ('bws', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweightstation')),
                ('car_registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_car_registration', to='weightapp.basecarregistration')),
                ('car_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_car_team', to='weightapp.basecarteam')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_customer', to='weightapp.basecustomer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_driver', to='weightapp.basedriver')),
                ('mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_mill', to='weightapp.basemill')),
                ('scoop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_scoop', to='weightapp.basescoop')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_site', to='weightapp.basesite')),
                ('stone_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_history_stone_type', to='weightapp.basestonetype')),
                ('user_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_update', to=settings.AUTH_USER_MODEL)),
                ('weight_table', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.weight')),
            ],
            options={
                'db_table': 'weight_history',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scale_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='รหัสผู้ชั่ง')),
                ('scale_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อผู้ชั่ง')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
            ],
            options={
                'verbose_name': 'ผู้ชั่ง',
                'verbose_name_plural': 'ข้อมูลผู้ชั่ง',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ManyToManyField(to='weightapp.basecompany', verbose_name='การมองเห็นแท็ปบริษัท')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
                ('visible', models.ManyToManyField(to='weightapp.basevisible', verbose_name='การมองเห็นแท็ปการใช้งาน')),
            ],
            options={
                'verbose_name': 'ผู้ใช้และตำแหน่งงาน',
                'verbose_name_plural': 'ข้อมูลผู้ใช้และตำแหน่งงาน',
            },
        ),
        migrations.CreateModel(
            name='StoneEstimateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.IntegerField(blank=True, default=0, null=True)),
                ('se', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.stoneestimate')),
                ('stone_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basestonetype')),
            ],
            options={
                'db_table': 'stone_estimate_item',
            },
        ),
        migrations.CreateModel(
            name='ProductionLossItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loss_time', models.DurationField(blank=True, null=True)),
                ('loss_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baselosstype')),
                ('mc_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basemachinetype')),
                ('production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.production')),
            ],
            options={
                'db_table': 'production_loss_item',
            },
        ),
        migrations.CreateModel(
            name='ProductionGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='วันที่ผลิต')),
                ('accumulated_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท')),
                ('line_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baselinetype')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basesite', verbose_name='ปลายทาง')),
            ],
            options={
                'db_table': 'production_goal',
            },
        ),
        migrations.AddField(
            model_name='production',
            name='pd_goal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.productiongoal'),
        ),
        migrations.AddField(
            model_name='production',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basesite', verbose_name='ปลายทาง'),
        ),
        migrations.AddField(
            model_name='baseweightstation',
            name='weight_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweighttype'),
        ),
        migrations.CreateModel(
            name='BaseTransport',
            fields=[
                ('base_transport_id', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('base_transport_name', models.CharField(blank=True, max_length=255, null=True)),
                ('base_carry_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecarrytype')),
            ],
            options={
                'db_table': 'base_transport',
            },
        ),
        migrations.CreateModel(
            name='BaseTimeEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_from', models.TimeField(blank=True, null=True)),
                ('time_to', models.TimeField(blank=True, null=True)),
                ('time_name', models.CharField(blank=True, max_length=120, null=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basesite')),
            ],
            options={
                'db_table': 'base_time_estimate',
            },
        ),
        migrations.AddField(
            model_name='basesite',
            name='weight_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweighttype', verbose_name='ประเภทเครื่องชั่ง'),
        ),
        migrations.CreateModel(
            name='BaseSEC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ManyToManyField(blank=True, null=True, to='weightapp.basecompany', verbose_name='บริษัท')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecustomer', verbose_name='ผู้รับเหมา')),
            ],
            options={
                'verbose_name': 'ผู้รับเหมาและบริษัท',
                'verbose_name_plural': 'ข้อมูลผู้รับเหมาและบริษัท',
                'db_table': 'base_SEC',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='basemill',
            name='weight_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweighttype', verbose_name='ประเภทเครื่องชั่ง'),
        ),
        migrations.AddField(
            model_name='basecustomer',
            name='base_job_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basejobtype', verbose_name='ประเภทงานของลูกค้า'),
        ),
        migrations.AddField(
            model_name='basecustomer',
            name='base_vat_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basevattype', verbose_name='ชนิดvat'),
        ),
        migrations.AddField(
            model_name='basecustomer',
            name='weight_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.baseweighttype', verbose_name='ชนิดเครื่องชั่ง'),
        ),
        migrations.AddField(
            model_name='basecarregistration',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecompany', verbose_name='บริษัท'),
        ),
        migrations.CreateModel(
            name='BaseCustomerSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecustomer', verbose_name='ลูกค้า')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basesite', verbose_name='ปลายทาง')),
            ],
            options={
                'verbose_name': 'ลูกค้าและปลายทาง',
                'verbose_name_plural': 'ข้อมูลลูกค้าและปลายทาง',
                'db_table': 'base_customer_site',
                'ordering': ('id',),
                'unique_together': {('customer', 'site')},
            },
        ),
        migrations.CreateModel(
            name='BaseCar',
            fields=[
                ('car_id', models.CharField(max_length=120, primary_key=True, serialize=False, verbose_name='รหัสรถร่วม')),
                ('car_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อรถร่วม')),
                ('v_stamp', models.DateTimeField(auto_now=True)),
                ('base_car_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='weightapp.basecarteam', verbose_name='ทีม')),
            ],
            options={
                'verbose_name': 'รถร่วมและทีม',
                'verbose_name_plural': 'ข้อมูลรถร่วมและทีม',
                'db_table': 'base_car',
                'unique_together': {('car_name', 'base_car_team')},
            },
        ),
    ]
